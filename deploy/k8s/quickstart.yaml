---
# Source: wg-access-server/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: quickstart-wg-access-server
  labels:
    helm.sh/chart: wg-access-server-v0.3.0
    app: wg-access-server
    app.kubernetes.io/name: wg-access-server
    app.kubernetes.io/instance: quickstart
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |-
---
# Source: wg-access-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: quickstart-wg-access-server-web
  labels:
    helm.sh/chart: wg-access-server-v0.3.0
    app: wg-access-server
    app.kubernetes.io/name: wg-access-server
    app.kubernetes.io/instance: quickstart
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app: wg-access-server
    app.kubernetes.io/name: wg-access-server
    app.kubernetes.io/instance: quickstart
---
# Source: wg-access-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: quickstart-wg-access-server-wireguard
  labels:
    helm.sh/chart: wg-access-server-v0.3.0
    app: wg-access-server
    app.kubernetes.io/name: wg-access-server
    app.kubernetes.io/instance: quickstart
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 51820
      targetPort: 51820
      protocol: UDP
      name: wireguard
  selector:
    app: wg-access-server
    app.kubernetes.io/name: wg-access-server
    app.kubernetes.io/instance: quickstart
---
# Source: wg-access-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quickstart-wg-access-server
  labels:
    helm.sh/chart: wg-access-server-v0.3.0
    app: wg-access-server
    app.kubernetes.io/name: wg-access-server
    app.kubernetes.io/instance: quickstart
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app: wg-access-server
      app.kubernetes.io/name: wg-access-server
      app.kubernetes.io/instance: quickstart
  template:
    metadata:
      annotations:
        checksum/configmap: 7a3595fe7cc5b64f30048f1b18a2b5f2788470e43a4ba383e42392e7b2d97384
      labels:
        app: wg-access-server
        app.kubernetes.io/name: wg-access-server
        app.kubernetes.io/instance: quickstart
    spec:
      containers:
        - name: wg-access-server
          securityContext:
            capabilities:
              add: ['NET_ADMIN']
          image: "place1/wg-access-server:v0.3.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: wireguard
              containerPort: 51820
              protocol: UDP
          env:
          volumeMounts:
            - name: tun
              mountPath: /dev/net/tun
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config.yaml
              subPath: config.yaml
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
      volumes:
        - name: tun
          hostPath:
            type: 'CharDevice'
            path: /dev/net/tun
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: "quickstart-wg-access-server"
